<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="appBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAJiYAAAEAIADoFwAAFgAAACgAAAAmAAAATAAAAAEAIAAAAAAAwBcAABMLAAATCwAAAAAAAAAA
        AACstk2/rLZNv6y2Tb+stk2/rLZNv6y2Tb+stk2/rLZNv6y2Tb+stk2/rLZNv6y2Tb+stk2/rLZNv6y2
        Tb+stk2/rLZNv6y2Tb+stk2/rLZNv6y2Tb+stk2/rLZNv6y2Tb+stk2/rLZNv6y2Tb+stk2/rLZNv6y2
        Tb+stk2/rLZNv6y2Tb+stk2/rLZNv6y2Tb+stk2/rLZNv6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2
        Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2
        Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2
        Tf+stk3/rLZN/6y2Tf+stk3/p7JE/5ikIv+lsD//rLZN/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6q0
        SP+jrjr/mqYn/5qmJ/+apif/laId/5WiHf+apif/mqYn/6GsNf+nskT/rLZN/6y2Tf+stk3/rLZN/6y2
        Tf+stk3/rLZN/6WwP/+YpCL/pbA//6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6WwP/+KmAX/iJYA/5qm
        J/+stk3/rLZN/6y2Tf+stk3/pbA//5ikIv+Mmgr/iJYA/4iWAP+IlgD/iJYA/4iWAP+IlgD/iJYA/4iW
        AP+IlgD/iJYA/4iWAP+Mmgr/mqYn/6eyRP+stk3/rLZN/6y2Tf+stk3/k6AY/4iWAP+KmAX/o646/6y2
        Tf+stk3/rLZN/6y2TtWstk3/k6AY/4iWAP+ToBn/qrRI/6y2Tf+stk3/o646/5GeE/+IlgD/iJYA/4iW
        AP+IlgD/j5wP/5OgGf+apif/mqYn/5qmJ/+apif/mqYn/5ikIv+PnA//iJYA/4iWAP+IlgD/iJYA/5Wi
        Hf+nskT/rLZN/6y2Tf+qtEj/j5wP/4iWAP+IlgD/o646/6y2Tf+stk7VrrhOSKy2Tf+lsD//nKgs/6y2
        Tf+stk3/qrRI/5OgGP+IlgD/iJYA/4qYBf+Voh3/oaw1/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2
        Tf+stk3/rLZN/6y2Tf+stk3/nqox/5OgGf+IlgD/iJYA/4iWAP+apif/rLZN/6y2Tf+qtEj/laId/4iW
        AP+ToBj/rLZN/664TkgAAAAArLZOuKy2Tf+stk3/rLZN/6WwP/+Mmgr/iJYA/4qYBf+apif/qrRI/6y2
        Tf+stk3/rLZN/6y2Tf+krkT/nKc6/4+bLP+Llyf/i5cn/5OfMP+cpzr/rLZN/6y2Tf+stk3/rLZN/6ey
        RP+RnhT/iJYA/4iWAP+RnhP/qrRI/6y2Tf+stk3/nKgs/6eyRP+stk64AAAAAAAAAACwtk8qrLZN/Ky2
        Tf+nskT/ipgF/4iWAP+PnA//pbA//6y2Tf+stk3/rLZN/5ynOv+DkB3/b30F/2t5AP9reQD/a3kA/2t5
        AP9reQD/a3kA/2t5AP9reQD/e4gT/5OfMP+stk3/rLZN/6y2Tf+hrDX/ipgF/4iWAP+PnA//qrRI/6y2
        Tf+stk3/rLZN/LC2TyoAAAAAAAAAAAAAAACtt02YrLZN/5qmJ/+IlgD/j5wP/6q0SP+stk3/rLZN/5yn
        Ov97iBP/a3kA/2t5AP9reQD/a3kA/3uIFP97iBT/iJQi/3+MGf97iBT/c4EK/2t5AP9reQD/a3kA/3OA
        Cv+YozX/rLZN/6y2Tf+lsD//ipgF/4iWAP+apif/rLZN/6y2Tf+tt02YAAAAAAAAAAAAAAAAAAAAALa2
        VRWrtk3xpbA//5WiHf+qtEj/rLZN/6y2Tf+HkyL/a3kA/2t5AP9vfQX/g5Ad/5ynOv+stk3/rLZN/6Su
        RP+cpzr/nKc6/6SuRP+stk3/pK5E/4yYJ/9zgQr/a3kA/2t5AP+DkB3/rLZN/6y2Tf+nskT/mqYn/6ey
        RP+stk3/q7ZN8ba2VRUAAAAAAAAAAAAAAAAAAAAAAAAAAKy3T3istk3/rLZN/6y2Tf+stk3/f4wY/2t5
        AP9reQD/iJQi/6iySP+stk3/rLZN/6SuRP97iBP/a3kA/2t5AP9reQD/a3kA/3uIE/+oskj/rLZN/6iy
        SP+MmCf/a3kA/2t5AP93hA//rLZN/6y2Tf+stk3/rLZN/6y2Tf+st094AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtrZtB6y2TtWstk3/rLZN/4+bLP9reQD/a3kA/5OfMP+stk3/rLZN/6y2Tf+oskj/b30F/2t5
        AP9reQD/a3kA/2t5AP9reQD/a3kA/299Bf+oskj/rLZN/6y2Tf+YozX/a3kA/2t5AP+Pmyz/rLZN/6y2
        Tf+stk3/rLZO1ba2bQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArrhOSKy2Tf+stk3/oKo//299
        Bf9reQD/g5Ad/6y2Tf+stk3/rLZN/4OQHf9reQD/a3kA/2t5AP9zgQr/b30F/2t5AP9reQD/a3kA/4OQ
        Hf+stk3/rLZN/5OfMP9reQD/a3kA/6SuRP+stk3/rLZN/6y2Tf+uuE5IAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAArLZOuKy2Tf+stk3/k58w/2t5AP9reQD/g5Ad/6y2Tf+stk3/a3kA/2t5
        AP9reQD/jJgn/6y2Tf+stk3/jJgn/2t5AP9reQD/a3kA/6y2Tf+gqj//b30F/2t5AP+Llyf/rLZN/6y2
        Tf+stk3/rLZOuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwtk8qrLZN/Ky2
        Tf+stk3/k58w/2t5AP9reQD/f4wY/5mkN/9reQD/a3kA/2t5AP+oskn/rLZN/6y2Tf+oskn/a3kA/2t5
        AP9reQD/k54v/299Bf9reQD/f4wZ/6y2Tf+stk3/rLZN/6y2Tfywtk8qAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtt02YrLZN/6y2Tf+stk3/k58w/2t5AP9reQD/cX8I/2t5
        AP9reQD/a3kA/6SuRP+stk3/rLZN/6SuRP9reQD/a3kA/2t5AP9reQD/a3kA/3eED/+oskj/rLZN/6y2
        Tf+stk3/rbdNmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALa2
        VRWrtk3xrLZN/6y2Tf+stk3/oKo//3OBCv9reQD/a3kA/2t5AP9reQD/eocT/5mkN/+ZpDf/eocT/2t5
        AP9reQD/a3kA/2t5AP+DkB3/qLJI/6y2Tf+stk3/rLZN/6u2TfG2tlUVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKy3T3istk3/rLZN/6y2Tf+stk3/qLJI/4yY
        J/9vfQX/a3kA/2t5AP9reQD/a3kA/2t5AP9reQD/a3kA/2t5AP9zgAn/mKM1/6y2Tf+stk3/rLZN/6y2
        Tf+stk3/rLdPeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtrZtB6y2TeCstk3/rLZN/6y2Tf+stk3/rLZN/6iySP+UnzH/f4wZ/3uIFP9reQD/a3kA/3uI
        FP9/jBn/mKM1/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2TeC2tm0HAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArrdOWKy2Tf+nskT/ipgF/5Og
        GP+nskT/rLZN/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6y2Tf+stk3/rLZN/6eyRP+ToBj/ipgF/6Ww
        P/+stk3/rrdOWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAArLZNx6eyRP+IlgD/iJYA/4iWAP+RnhP/nKgs/6WwP/+stk3/rLZN/6y2
        Tf+stk3/pbA//5yoLP+PnA//iJYA/4iWAP+IlgD/oaw1/6y2TccAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACttk04rLZN/6Ww
        P/+RnhT/iJYA/4iWAP+IlgD/iJYA/4iWAP+IlgD/iJYA/4iWAP+IlgD/iJYA/4iWAP+IlgD/kZ4U/6Ou
        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
        h//8AAAA///P//wAAAD//8///AAAAA==
</value>
  </data>
</root>